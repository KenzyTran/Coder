{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      transactions: [],\n      ignoreNegativeBalances: false\n    };\n  },\n  computed: {\n    hasNegativeBalances() {\n      return this.transactions.some(t => t.runningBalance < 0);\n    },\n    negativeBalanceTransactions() {\n      const symbols = [...new Set(this.transactions.filter(t => t.runningBalance < 0).map(t => t.symbol))];\n      return symbols.map(symbol => {\n        const transactions = this.getTransactionsForSymbol(symbol);\n        const lastTransaction = transactions[transactions.length - 1];\n        return {\n          symbol,\n          runningBalance: lastTransaction.runningBalance,\n          transactions\n        };\n      });\n    }\n  },\n  methods: {\n    beforeUpload(file) {\n      const isCSVOrXLSX = file.type.includes('csv') || file.type.includes('sheet');\n      if (!isCSVOrXLSX) {\n        ElMessage.error('Unsupported file format, please upload CSV/XLSX.');\n      }\n      return isCSVOrXLSX;\n    },\n    handleFileSuccess(response) {\n      this.transactions = response.map((transaction, index) => ({\n        ...transaction,\n        rowIndex: index + 1\n      }));\n      this.ignoreNegativeBalances = false; // Reset checkbox when new file is uploaded\n    },\n    handleFileError(error) {\n      console.error('Upload error:', error);\n      const errorMessage = error.response?.data?.error || 'There was an error processing your file.';\n      ElMessage.error(errorMessage);\n    },\n    async importTransactions() {\n      try {\n        console.log('Starting import with data:', {\n          transactionCount: this.transactions.length,\n          ignoreNegativeBalances: this.ignoreNegativeBalances,\n          sampleTransaction: this.transactions[0]\n        });\n        const {\n          data\n        } = await axios.post('/api/transactions/import', {\n          transactions: this.transactions,\n          userId: 'user123',\n          ignoreNegativeBalances: this.ignoreNegativeBalances\n        });\n        console.log('Import response:', data);\n        if (data.errors.length === 0) {\n          ElMessage.success(`✅ Import thành công ${data.success} giao dịch.`);\n          this.transactions = []; // Clear the table after successful import\n        } else {\n          console.error('Import errors:', data.errors);\n          data.errors.forEach(error => {\n            const transaction = this.transactions[error.index];\n            ElMessage.error(`❌ Lỗi ở dòng ${error.index + 1} (${transaction.symbol}): ${error.error}`);\n          });\n        }\n      } catch (error) {\n        console.error('Import error details:', {\n          message: error.message,\n          response: error.response?.data,\n          status: error.response?.status\n        });\n        const errorMessage = error.response?.data?.error || error.response?.data?.details || error.message || 'Failed to import transactions.';\n        ElMessage.error(`❌ Lỗi import: ${errorMessage}`);\n      }\n    },\n    getBalanceClass({\n      row\n    }) {\n      return row.runningBalance < 0 ? 'negative-balance' : '';\n    },\n    getTransactionsForSymbol(symbol) {\n      return this.transactions.filter(t => t.symbol === symbol).sort((a, b) => new Date(a.tradeDate) - new Date(b.tradeDate));\n    }\n  }\n};","map":{"version":3,"names":["ElMessage","axios","data","transactions","ignoreNegativeBalances","computed","hasNegativeBalances","some","t","runningBalance","negativeBalanceTransactions","symbols","Set","filter","map","symbol","getTransactionsForSymbol","lastTransaction","length","methods","beforeUpload","file","isCSVOrXLSX","type","includes","error","handleFileSuccess","response","transaction","index","rowIndex","handleFileError","console","errorMessage","importTransactions","log","transactionCount","sampleTransaction","post","userId","errors","success","forEach","message","status","details","getBalanceClass","row","sort","a","b","Date","tradeDate"],"sources":["/home/kiet/projects/agents/3_crew/engineering_team/frontend/src/components/TransactionUploader.vue"],"sourcesContent":["<template>\n  <div class=\"transaction-uploader\">\n    <div class=\"upload-section\">\n      <el-upload\n        class=\"upload-demo\"\n        drag\n        action=\"/api/transactions/upload\"\n        :show-file-list=\"false\"\n        accept=\".csv,.xlsx\"\n        :before-upload=\"beforeUpload\"\n        :on-success=\"handleFileSuccess\"\n        :on-error=\"handleFileError\">\n        <i class=\"el-icon-upload\"></i>\n        <div class=\"el-upload__text\">Drag the CSV/XLSX file here or <em>click to upload</em></div>\n      </el-upload>\n    </div>\n\n    <div v-if=\"transactions.length > 0\" class=\"transactions-section\">\n      <!-- Main transactions table -->\n      <div class=\"section-header\">\n        <h3>Danh sách giao dịch</h3>\n        <el-button \n          type=\"primary\" \n          size=\"large\"\n          @click=\"importTransactions\" \n          :disabled=\"transactions.length === 0 || (hasNegativeBalances && !ignoreNegativeBalances)\">\n          Import Giao Dịch\n        </el-button>\n      </div>\n\n      <el-table\n        :data=\"transactions\"\n        style=\"width: 100%; margin-bottom: 20px\"\n        border>\n        <el-table-column type=\"index\" label=\"#\" width=\"50\"></el-table-column>\n        <el-table-column prop=\"tradeDate\" label=\"Ngày GD\"></el-table-column>\n        <el-table-column prop=\"symbol\" label=\"Mã CK\"></el-table-column>\n        <el-table-column prop=\"type\" label=\"Loại GD\"></el-table-column>\n        <el-table-column prop=\"volume\" label=\"Khối lượng\"></el-table-column>\n        <el-table-column prop=\"price\" label=\"Giá\"></el-table-column>\n        <el-table-column prop=\"feeRate\" label=\"Tỷ lệ phí\"></el-table-column>\n        <el-table-column prop=\"taxRate\" label=\"Tỷ lệ thuế\"></el-table-column>\n        <el-table-column\n          prop=\"runningBalance\"\n          label=\"Running Balance\"\n          :cell-class-name=\"getBalanceClass\">\n        </el-table-column>\n      </el-table>\n\n      <!-- Negative balance warning table -->\n      <div v-if=\"hasNegativeBalances\" class=\"negative-balance-warning\">\n        <el-alert\n          title=\"Cảnh báo: Có giao dịch dẫn đến số dư âm\"\n          type=\"warning\"\n          :closable=\"false\"\n          show-icon>\n          <template #default>\n            <p>Vui lòng kiểm tra các giao dịch sau:</p>\n          </template>\n        </el-alert>\n\n        <el-table\n          :data=\"negativeBalanceTransactions\"\n          style=\"width: 100%; margin: 10px 0 20px 0\"\n          border>\n          <el-table-column type=\"index\" label=\"#\" width=\"50\"></el-table-column>\n          <el-table-column prop=\"symbol\" label=\"Mã CK\"></el-table-column>\n          <el-table-column prop=\"runningBalance\" label=\"Số dư cuối\"></el-table-column>\n          <el-table-column label=\"Chi tiết giao dịch\">\n            <template #default=\"scope\">\n              <el-table\n                :data=\"getTransactionsForSymbol(scope.row.symbol)\"\n                style=\"width: 100%\"\n                size=\"small\">\n                <el-table-column prop=\"tradeDate\" label=\"Ngày GD\" width=\"120\"></el-table-column>\n                <el-table-column prop=\"type\" label=\"Loại GD\" width=\"100\"></el-table-column>\n                <el-table-column prop=\"volume\" label=\"Khối lượng\" width=\"100\"></el-table-column>\n                <el-table-column prop=\"price\" label=\"Giá\" width=\"100\"></el-table-column>\n              </el-table>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-checkbox v-model=\"ignoreNegativeBalances\" style=\"margin-bottom: 20px\">\n          Bỏ qua cảnh báo số dư âm và tiếp tục import\n        </el-checkbox>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      transactions: [],\n      ignoreNegativeBalances: false\n    };\n  },\n  computed: {\n    hasNegativeBalances() {\n      return this.transactions.some(t => t.runningBalance < 0);\n    },\n    negativeBalanceTransactions() {\n      const symbols = [...new Set(this.transactions\n        .filter(t => t.runningBalance < 0)\n        .map(t => t.symbol))];\n      \n      return symbols.map(symbol => {\n        const transactions = this.getTransactionsForSymbol(symbol);\n        const lastTransaction = transactions[transactions.length - 1];\n        return {\n          symbol,\n          runningBalance: lastTransaction.runningBalance,\n          transactions\n        };\n      });\n    }\n  },\n  methods: {\n    beforeUpload(file) {\n      const isCSVOrXLSX = file.type.includes('csv') || file.type.includes('sheet');\n      if (!isCSVOrXLSX) {\n        ElMessage.error('Unsupported file format, please upload CSV/XLSX.');\n      }\n      return isCSVOrXLSX;\n    },\n    handleFileSuccess(response) {\n      this.transactions = response.map((transaction, index) => ({\n        ...transaction,\n        rowIndex: index + 1\n      }));\n      this.ignoreNegativeBalances = false; // Reset checkbox when new file is uploaded\n    },\n    handleFileError(error) {\n      console.error('Upload error:', error);\n      const errorMessage = error.response?.data?.error || 'There was an error processing your file.';\n      ElMessage.error(errorMessage);\n    },\n    async importTransactions() {\n      try {\n        console.log('Starting import with data:', {\n          transactionCount: this.transactions.length,\n          ignoreNegativeBalances: this.ignoreNegativeBalances,\n          sampleTransaction: this.transactions[0]\n        });\n\n        const { data } = await axios.post('/api/transactions/import', {\n          transactions: this.transactions,\n          userId: 'user123',\n          ignoreNegativeBalances: this.ignoreNegativeBalances\n        });\n        \n        console.log('Import response:', data);\n        \n        if (data.errors.length === 0) {\n          ElMessage.success(`✅ Import thành công ${data.success} giao dịch.`);\n          this.transactions = []; // Clear the table after successful import\n        } else {\n          console.error('Import errors:', data.errors);\n          data.errors.forEach((error) => {\n            const transaction = this.transactions[error.index];\n            ElMessage.error(\n              `❌ Lỗi ở dòng ${error.index + 1} (${transaction.symbol}): ${error.error}`\n            );\n          });\n        }\n      } catch (error) {\n        console.error('Import error details:', {\n          message: error.message,\n          response: error.response?.data,\n          status: error.response?.status\n        });\n        \n        const errorMessage = error.response?.data?.error || \n                           error.response?.data?.details || \n                           error.message || \n                           'Failed to import transactions.';\n        \n        ElMessage.error(`❌ Lỗi import: ${errorMessage}`);\n      }\n    },\n    getBalanceClass({ row }) {\n      return row.runningBalance < 0 ? 'negative-balance' : '';\n    },\n    getTransactionsForSymbol(symbol) {\n      return this.transactions\n        .filter(t => t.symbol === symbol)\n        .sort((a, b) => new Date(a.tradeDate) - new Date(b.tradeDate));\n    }\n  }\n};\n</script>\n\n<style scoped>\n.transaction-uploader {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.upload-section {\n  margin-bottom: 30px;\n}\n\n.upload-demo {\n  width: 100%;\n}\n\n.el-upload__text {\n  font-size: 16px;\n}\n\n.transactions-section {\n  background: #fff;\n  border-radius: 8px;\n  padding: 20px;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,0.1);\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid #ebeef5;\n}\n\n.section-header h3 {\n  margin: 0;\n  color: #303133;\n  font-size: 18px;\n}\n\n.negative-balance {\n  background-color: #fff2f0;\n  color: #f56c6c;\n}\n\n.negative-balance-warning {\n  margin: 20px 0;\n  padding: 15px;\n  border: 1px solid #e6a23c;\n  border-radius: 4px;\n  background-color: #fdf6ec;\n}\n\n/* Responsive styles */\n@media (max-width: 768px) {\n  .section-header {\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .section-header .el-button {\n    width: 100%;\n  }\n}\n</style> "],"mappings":"AA4FA,SAASA,SAAQ,QAAS,cAAc;AACxC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,EAAE;MAChBC,sBAAsB,EAAE;IAC1B,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,mBAAmBA,CAAA,EAAG;MACpB,OAAO,IAAI,CAACH,YAAY,CAACI,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,cAAa,GAAI,CAAC,CAAC;IAC1D,CAAC;IACDC,2BAA2BA,CAAA,EAAG;MAC5B,MAAMC,OAAM,GAAI,CAAC,GAAG,IAAIC,GAAG,CAAC,IAAI,CAACT,YAAW,CACzCU,MAAM,CAACL,CAAA,IAAKA,CAAC,CAACC,cAAa,GAAI,CAAC,EAChCK,GAAG,CAACN,CAAA,IAAKA,CAAC,CAACO,MAAM,CAAC,CAAC,CAAC;MAEvB,OAAOJ,OAAO,CAACG,GAAG,CAACC,MAAK,IAAK;QAC3B,MAAMZ,YAAW,GAAI,IAAI,CAACa,wBAAwB,CAACD,MAAM,CAAC;QAC1D,MAAME,eAAc,GAAId,YAAY,CAACA,YAAY,CAACe,MAAK,GAAI,CAAC,CAAC;QAC7D,OAAO;UACLH,MAAM;UACNN,cAAc,EAAEQ,eAAe,CAACR,cAAc;UAC9CN;QACF,CAAC;MACH,CAAC,CAAC;IACJ;EACF,CAAC;EACDgB,OAAO,EAAE;IACPC,YAAYA,CAACC,IAAI,EAAE;MACjB,MAAMC,WAAU,GAAID,IAAI,CAACE,IAAI,CAACC,QAAQ,CAAC,KAAK,KAAKH,IAAI,CAACE,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC;MAC5E,IAAI,CAACF,WAAW,EAAE;QAChBtB,SAAS,CAACyB,KAAK,CAAC,kDAAkD,CAAC;MACrE;MACA,OAAOH,WAAW;IACpB,CAAC;IACDI,iBAAiBA,CAACC,QAAQ,EAAE;MAC1B,IAAI,CAACxB,YAAW,GAAIwB,QAAQ,CAACb,GAAG,CAAC,CAACc,WAAW,EAAEC,KAAK,MAAM;QACxD,GAAGD,WAAW;QACdE,QAAQ,EAAED,KAAI,GAAI;MACpB,CAAC,CAAC,CAAC;MACH,IAAI,CAACzB,sBAAqB,GAAI,KAAK,EAAE;IACvC,CAAC;IACD2B,eAAeA,CAACN,KAAK,EAAE;MACrBO,OAAO,CAACP,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMQ,YAAW,GAAIR,KAAK,CAACE,QAAQ,EAAEzB,IAAI,EAAEuB,KAAI,IAAK,0CAA0C;MAC9FzB,SAAS,CAACyB,KAAK,CAACQ,YAAY,CAAC;IAC/B,CAAC;IACD,MAAMC,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACFF,OAAO,CAACG,GAAG,CAAC,4BAA4B,EAAE;UACxCC,gBAAgB,EAAE,IAAI,CAACjC,YAAY,CAACe,MAAM;UAC1Cd,sBAAsB,EAAE,IAAI,CAACA,sBAAsB;UACnDiC,iBAAiB,EAAE,IAAI,CAAClC,YAAY,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,MAAM;UAAED;QAAK,IAAI,MAAMD,KAAK,CAACqC,IAAI,CAAC,0BAA0B,EAAE;UAC5DnC,YAAY,EAAE,IAAI,CAACA,YAAY;UAC/BoC,MAAM,EAAE,SAAS;UACjBnC,sBAAsB,EAAE,IAAI,CAACA;QAC/B,CAAC,CAAC;QAEF4B,OAAO,CAACG,GAAG,CAAC,kBAAkB,EAAEjC,IAAI,CAAC;QAErC,IAAIA,IAAI,CAACsC,MAAM,CAACtB,MAAK,KAAM,CAAC,EAAE;UAC5BlB,SAAS,CAACyC,OAAO,CAAC,uBAAuBvC,IAAI,CAACuC,OAAO,aAAa,CAAC;UACnE,IAAI,CAACtC,YAAW,GAAI,EAAE,EAAE;QAC1B,OAAO;UACL6B,OAAO,CAACP,KAAK,CAAC,gBAAgB,EAAEvB,IAAI,CAACsC,MAAM,CAAC;UAC5CtC,IAAI,CAACsC,MAAM,CAACE,OAAO,CAAEjB,KAAK,IAAK;YAC7B,MAAMG,WAAU,GAAI,IAAI,CAACzB,YAAY,CAACsB,KAAK,CAACI,KAAK,CAAC;YAClD7B,SAAS,CAACyB,KAAK,CACb,gBAAgBA,KAAK,CAACI,KAAI,GAAI,CAAC,KAAKD,WAAW,CAACb,MAAM,MAAMU,KAAK,CAACA,KAAK,EACzE,CAAC;UACH,CAAC,CAAC;QACJ;MACF,EAAE,OAAOA,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAE;UACrCkB,OAAO,EAAElB,KAAK,CAACkB,OAAO;UACtBhB,QAAQ,EAAEF,KAAK,CAACE,QAAQ,EAAEzB,IAAI;UAC9B0C,MAAM,EAAEnB,KAAK,CAACE,QAAQ,EAAEiB;QAC1B,CAAC,CAAC;QAEF,MAAMX,YAAW,GAAIR,KAAK,CAACE,QAAQ,EAAEzB,IAAI,EAAEuB,KAAI,IAC5BA,KAAK,CAACE,QAAQ,EAAEzB,IAAI,EAAE2C,OAAM,IAC5BpB,KAAK,CAACkB,OAAM,IACZ,gCAAgC;QAEnD3C,SAAS,CAACyB,KAAK,CAAC,iBAAiBQ,YAAY,EAAE,CAAC;MAClD;IACF,CAAC;IACDa,eAAeA,CAAC;MAAEC;IAAI,CAAC,EAAE;MACvB,OAAOA,GAAG,CAACtC,cAAa,GAAI,IAAI,kBAAiB,GAAI,EAAE;IACzD,CAAC;IACDO,wBAAwBA,CAACD,MAAM,EAAE;MAC/B,OAAO,IAAI,CAACZ,YAAW,CACpBU,MAAM,CAACL,CAAA,IAAKA,CAAC,CAACO,MAAK,KAAMA,MAAM,EAC/BiC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,SAAS,IAAI,IAAID,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,CAAC;IAClE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}