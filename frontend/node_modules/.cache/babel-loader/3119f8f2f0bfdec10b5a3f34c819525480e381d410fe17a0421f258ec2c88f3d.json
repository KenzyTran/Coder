{"ast":null,"code":"import { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  methods: {\n    beforeUpload(file) {\n      const isCSVOrXLSX = file.type.includes('csv') || file.type.includes('sheet');\n      if (!isCSVOrXLSX) {\n        ElMessage.error('Unsupported file format, please upload CSV/XLSX.');\n      }\n      return isCSVOrXLSX;\n    },\n    handleFileSuccess(response) {\n      this.transactions = response.map((transaction, index) => ({\n        ...transaction,\n        rowIndex: index + 1\n      }));\n    },\n    handleFileError() {\n      ElMessage.error('There was an error processing your file.');\n    },\n    async importTransactions() {\n      try {\n        const {\n          data\n        } = await axios.post('/api/transactions/import', {\n          transactions: this.transactions,\n          userId: 'user123' // Hardcoded user id for the example\n        });\n        if (data.errors.length === 0) {\n          ElMessage.success(`✅ Import thành công ${data.success} giao dịch.`);\n        } else {\n          data.errors.forEach(error => {\n            ElMessage.error(`❌ Lỗi parsing/giá/khối lượng <= 0 at row: ${error.index + 1}`);\n          });\n        }\n      } catch (error) {\n        ElMessage.error('Failed to import transactions.');\n      }\n    },\n    getBalanceClass({\n      row\n    }) {\n      return row.runningBalance < 0 ? 'negative-balance' : '';\n    }\n  }\n};","map":{"version":3,"names":["ElMessage","axios","data","transactions","methods","beforeUpload","file","isCSVOrXLSX","type","includes","error","handleFileSuccess","response","map","transaction","index","rowIndex","handleFileError","importTransactions","post","userId","errors","length","success","forEach","getBalanceClass","row","runningBalance"],"sources":["/home/kiet/projects/agents/3_crew/engineering_team/frontend/src/components/TransactionUploader.vue"],"sourcesContent":["<template>\n  <div>\n    <el-upload\n      class=\"upload-demo\"\n      drag\n      action=\"/api/transactions/upload\"\n      :show-file-list=\"false\"\n      accept=\".csv,.xlsx\"\n      :before-upload=\"beforeUpload\"\n      :on-success=\"handleFileSuccess\"\n      :on-error=\"handleFileError\">\n      <i class=\"el-icon-upload\"></i>\n      <div class=\"el-upload__text\">Drag the CSV/XLSX file here or <em>click to upload</em></div>\n    </el-upload>\n    <el-table\n      v-if=\"transactions.length > 0\"\n      :data=\"transactions\"\n      style=\"width: 100%\">\n      <el-table-column type=\"index\" label=\"#\" width=\"50\"></el-table-column>\n      <el-table-column prop=\"tradeDate\" label=\"Ngày GD\"></el-table-column>\n      <el-table-column prop=\"symbol\" label=\"Mã CK\"></el-table-column>\n      <el-table-column prop=\"type\" label=\"Loại GD\"></el-table-column>\n      <el-table-column prop=\"volume\" label=\"Khối lượng\"></el-table-column>\n      <el-table-column prop=\"price\" label=\"Giá\"></el-table-column>\n      <el-table-column prop=\"feeRate\" label=\"Tỷ lệ phí\"></el-table-column>\n      <el-table-column prop=\"taxRate\" label=\"Tỷ lệ thuế\"></el-table-column>\n      <el-table-column\n        prop=\"runningBalance\"\n        label=\"Running Balance\"\n        :cell-class-name=\"getBalanceClass\">\n      </el-table-column>\n    </el-table>\n    <el-button type=\"primary\" @click=\"importTransactions\" :disabled=\"transactions.length === 0\">Import</el-button>\n  </div>\n</template>\n\n<script>\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      transactions: []\n    };\n  },\n  methods: {\n    beforeUpload(file) {\n      const isCSVOrXLSX = file.type.includes('csv') || file.type.includes('sheet');\n      if (!isCSVOrXLSX) {\n        ElMessage.error('Unsupported file format, please upload CSV/XLSX.');\n      }\n      return isCSVOrXLSX;\n    },\n    handleFileSuccess(response) {\n      this.transactions = response.map((transaction, index) => ({\n        ...transaction,\n        rowIndex: index + 1\n      }));\n    },\n    handleFileError() {\n      ElMessage.error('There was an error processing your file.');\n    },\n    async importTransactions() {\n      try {\n        const { data } = await axios.post('/api/transactions/import', {\n          transactions: this.transactions,\n          userId: 'user123' // Hardcoded user id for the example\n        });\n        if (data.errors.length === 0) {\n          ElMessage.success(`✅ Import thành công ${data.success} giao dịch.`);\n        } else {\n          data.errors.forEach((error) => {\n            ElMessage.error(`❌ Lỗi parsing/giá/khối lượng <= 0 at row: ${error.index + 1}`);\n          });\n        }\n      } catch (error) {\n        ElMessage.error('Failed to import transactions.');\n      }\n    },\n    getBalanceClass({ row }) {\n      return row.runningBalance < 0 ? 'negative-balance' : '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.upload-demo {\n  margin-bottom: 20px;\n}\n.el-upload__text {\n  font-size: 16px;\n}\n.negative-balance {\n  background-color: yellow;\n  color: red;\n}\n</style> "],"mappings":"AAqCA,SAASA,SAAQ,QAAS,cAAc;AACxC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,IAAI,EAAE;MACjB,MAAMC,WAAU,GAAID,IAAI,CAACE,IAAI,CAACC,QAAQ,CAAC,KAAK,KAAKH,IAAI,CAACE,IAAI,CAACC,QAAQ,CAAC,OAAO,CAAC;MAC5E,IAAI,CAACF,WAAW,EAAE;QAChBP,SAAS,CAACU,KAAK,CAAC,kDAAkD,CAAC;MACrE;MACA,OAAOH,WAAW;IACpB,CAAC;IACDI,iBAAiBA,CAACC,QAAQ,EAAE;MAC1B,IAAI,CAACT,YAAW,GAAIS,QAAQ,CAACC,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,MAAM;QACxD,GAAGD,WAAW;QACdE,QAAQ,EAAED,KAAI,GAAI;MACpB,CAAC,CAAC,CAAC;IACL,CAAC;IACDE,eAAeA,CAAA,EAAG;MAChBjB,SAAS,CAACU,KAAK,CAAC,0CAA0C,CAAC;IAC7D,CAAC;IACD,MAAMQ,kBAAkBA,CAAA,EAAG;MACzB,IAAI;QACF,MAAM;UAAEhB;QAAK,IAAI,MAAMD,KAAK,CAACkB,IAAI,CAAC,0BAA0B,EAAE;UAC5DhB,YAAY,EAAE,IAAI,CAACA,YAAY;UAC/BiB,MAAM,EAAE,SAAQ,CAAE;QACpB,CAAC,CAAC;QACF,IAAIlB,IAAI,CAACmB,MAAM,CAACC,MAAK,KAAM,CAAC,EAAE;UAC5BtB,SAAS,CAACuB,OAAO,CAAC,uBAAuBrB,IAAI,CAACqB,OAAO,aAAa,CAAC;QACrE,OAAO;UACLrB,IAAI,CAACmB,MAAM,CAACG,OAAO,CAAEd,KAAK,IAAK;YAC7BV,SAAS,CAACU,KAAK,CAAC,6CAA6CA,KAAK,CAACK,KAAI,GAAI,CAAC,EAAE,CAAC;UACjF,CAAC,CAAC;QACJ;MACF,EAAE,OAAOL,KAAK,EAAE;QACdV,SAAS,CAACU,KAAK,CAAC,gCAAgC,CAAC;MACnD;IACF,CAAC;IACDe,eAAeA,CAAC;MAAEC;IAAI,CAAC,EAAE;MACvB,OAAOA,GAAG,CAACC,cAAa,GAAI,IAAI,kBAAiB,GAAI,EAAE;IACzD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}